"use client";

import React from "react";
import Link from "next/link";
import { createPageUrl } from "@/utils";
import { Home, Users, ShieldAlert, LogOut, UserPlus } from "lucide-react";
import useAppLevelAuth from "@/hooks/useAppLevelAuth";
import { usePathname, useRouter } from "next/navigation";

interface LayoutProps {
  children: React.ReactNode;
  currentPageName?: string;
}

export default function Layout({ children, currentPageName }: LayoutProps) {
  const { isLoggedIn, logout } = useAppLevelAuth();
  const pathname = usePathname();
  const router = useRouter();

  if (currentPageName === "Landing") {
    return <>{children}</>;
  }

  const navigation = [
    { name: "Home", path: "Home", icon: Home },
    { name: "Contacts", path: "Contacts", icon: Users },
  ];

  const handleLogout = async () => {
    await logout();
    router.push(createPageUrl("login"));
  };

  return (
    <div className="flex flex-col min-h-screen bg-slate-900 text-slate-100 font-sans">
      <header className="bg-slate-900/80 backdrop-blur-sm border-b border-slate-700 sticky top-0 z-20">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-16">
            <div className="flex items-center gap-3">
              <img src="https://storage.googleapis.com/space-apps-assets/store_kWixMFcLNK/3M9QB6fUSY-WhatsApp%20Image%202025-09-28%20at%2000.23.37_11fa4a80.jpg" alt="EchoShield Logo" className="h-12 mix-blend-screen" />
            </div>
            {isLoggedIn && (
              <button onClick={handleLogout} className="flex items-center gap-2 text-sm font-medium text-slate-300 hover:text-white transition-colors">
                <LogOut className="h-4 w-4" />
                <span>Logout</span>
              </button>
            )}
          </div>
        </div>
      </header>
      
      <main className="flex-1 container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {isLoggedIn ? (
          children
        ) : (
          <div className="flex flex-col items-center justify-center h-[60vh] text-center">
            <img src="https://storage.googleapis.com/space-apps-assets/store_kWixMFcLNK/3M9QB6fUSY-WhatsApp%20Image%202025-09-28%20at%2000.23.37_11fa4a80.jpg" alt="EchoShield Logo" className="h-24 mb-6 mix-blend-screen" />
            <h2 className="text-3xl font-bold text-white mb-4">Welcome to EchoShield</h2>
            <p className="text-slate-400 max-w-md mb-8">Your personal safety companion. Please sign in to configure your emergency contacts and activate protection.</p>
            <div className="flex gap-4">
              <Link
                href={createPageUrl('login')}
                className="inline-flex justify-center items-center py-2 px-6 rounded-lg text-sm font-semibold text-white bg-red-600 hover:bg-red-700 transition-all duration-200"
              >
                Sign In
              </Link>
              <Link
                href={createPageUrl('signup')}
                className="inline-flex justify-center items-center py-2 px-6 rounded-lg text-sm font-semibold text-slate-100 bg-slate-700 hover:bg-slate-600 transition-all duration-200"
              >
                <UserPlus className="h-4 w-4 mr-2" />
                Create Account
              </Link>
            </div>
          </div>
        )}
      </main>

      {isLoggedIn && (
        <footer className="fixed bottom-0 left-0 right-0 bg-slate-900/80 backdrop-blur-sm border-t border-slate-700 md:hidden">
          <nav className="flex justify-around items-center h-16">
            {navigation.map((item) => {
              const Icon = item.icon;
              const isActive = pathname === createPageUrl(item.path);
              return (
                <Link
                  key={item.name}
                  href={createPageUrl(item.path)}
                  className={`flex flex-col items-center gap-1 transition-colors ${
                    isActive ? 'text-red-500' : 'text-slate-400 hover:text-red-400'
                  }`}
                >
                  <Icon className="h-6 w-6" />
                  <span className="text-xs font-medium">{item.name}</span>
                </Link>
              );
            })}
          </nav>
        </footer>
      )}
    </div>
  );
}
